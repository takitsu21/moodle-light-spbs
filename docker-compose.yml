version: '3.8'
services:
#  db:
#    image: postgres:14.1
#    container_name: postgres
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=123
#    ports:
#      - '5433:5432'
  #    volumes:
  #      - ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql

  db_courses:
    image: postgres:14.1
    build:
      context: ./db_courses
      dockerfile: Dockerfile
    container_name: db_courses
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
#      - POSTGRES_DB=db_courses
    ports:
      - '5434:5432'
  db_users:
    image: postgres:14.1
    build:
      context: ./db_users
      dockerfile: Dockerfile
    container_name: db_users
    ports:
      - '5435:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
#      - POSTGRES_DB=db_users

#  auth:
#    image: auth-service
#    build: .
#    container_name: auth-service
#    depends_on:
#      - db_users
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5435/postgres
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=123
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#    ports:
#      - '8081:8081'
#  code-runner:
#    image: code-runner-service
#    build: .
#    container_name: code-runner-service
#    ports:
#      - '8083:8084'
#    networks:
#      - micro-service-network

#  api:
#    image: api
#    container_name: api
#    depends_on:
#      - db
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=123
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#    ports:
#      - '8080:8082'


#networks:
#  micro-service-network:
#
#volumes:
#  database_data:
#    driver: local